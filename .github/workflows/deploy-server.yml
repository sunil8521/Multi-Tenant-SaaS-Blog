name: Build and Push Server Docker Image to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - "server/**"  # âœ… Trigger only when files in /server change

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: saas-hub

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # âœ… Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # âœ… Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # âœ… Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # âœ… Delete previous image (optional but keeps ECR clean)
      - name: Delete previous image in ECR
        run: |
          echo "ðŸ§¹ Deleting old image from ECR (if any)..."
          aws ecr batch-delete-image \
            --repository-name $ECR_REPOSITORY \
            --image-ids imageTag=latest || echo "No previous image found."

      # âœ… Build new Docker image from /server
      - name: Build Docker image
        run: |
          cd server
          docker build -t $ECR_REPOSITORY:latest .

      # âœ… Tag Docker image for ECR
      - name: Tag Docker image
        run: |
          docker tag $ECR_REPOSITORY:latest \
          ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      # âœ… Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      # âœ… Log success message
      - name: Log success
        run: echo "âœ… Server Docker image built and pushed successfully to ECR!"
