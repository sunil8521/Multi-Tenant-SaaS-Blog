name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1                 # âœ… Your AWS region
  ECR_REPOSITORY: saas-hub              # âœ… Your ECR repo name

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # âœ… 1. Get your project files
      - name: Checkout code
        uses: actions/checkout@v3

      # âœ… 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # âœ… 3. Login to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # âœ… 4. Build Docker image from /server folder
      - name: Build Docker image from /server
        run: |
          cd server
          docker build -t $ECR_REPOSITORY:latest .

      # âœ… 5. Tag image using registry output
      - name: Tag Docker image
        run: |
          docker tag $ECR_REPOSITORY:latest \
          ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      # âœ… 6. Push image to AWS ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      # âœ… 7. Final success log
      - name: Echo pushed image info
        run: |
          echo "âœ… Docker Image pushed successfully!"
          echo "ðŸ”— Image URL:"
          echo "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest"